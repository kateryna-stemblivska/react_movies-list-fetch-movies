{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","_useState7","_useState8","newMovie","setNewMovie","_useState9","_useState10","count","setCount","_Fragment","onSubmit","event","preventDefault","prev","fetch","concat","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","htmlFor","value","type","id","placeholder","cn","onChange","target","disabled","onClick","App","setMovies","find","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bebbc288.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [count, setCount] = useState(0);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setQuery(event.target.value);\n  };\n\n  const handleFindMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n    setCount(prev => prev + 1);\n\n    if (query) {\n      setError(false);\n\n      getMovie(query)\n        .then(response => {\n          if ('Error' in response) {\n            setError(true);\n          } else {\n            const movie = response as MovieData;\n\n            setNewMovie({\n              title: movie.Title,\n              description: movie.Plot,\n              imgUrl: movie.Poster === 'N/A'\n                ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n                : movie.Poster,\n              imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n              imdbId: movie.imdbID,\n            });\n          }\n        })\n        .catch(() => setError(true))\n        .finally(() => setLoading(false));\n    }\n  };\n\n  const handleAddMovie = () => {\n    if (newMovie) {\n      addMovie(newMovie);\n      setNewMovie(null);\n      setQuery('');\n      setCount(0);\n      setError(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              value={query}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': error,\n              })}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!query}\n            >\n              {\n                !count\n                  ? 'Find a movie'\n                  : 'Search again'\n              }\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=89994dcf';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}